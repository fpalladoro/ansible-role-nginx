---

- name: Nginx site directories
  file:
    state="directory"
    dest="{{item}}"
    owner="{{nginx_user}}"
    group="{{nginx_group}}"
    mode="0755"
  with_items:
    - "{{nginx_sites_available}}"
    - "{{nginx_sites_enabled}}"
 

- name: Nginx conf.d directory
  file:
    state=directory
    dest="{{nginx_config_dir}}"
    owner="root"
    group="{{nginx_group}}"
    mode="0755"


- name: Nginx SSL directory
  file:
    state=directory
    dest="{{nginx_ssl_dir}}"
    owner="root"
    group="{{nginx_group}}"
    mode="0750"


- name: Nginx Caching directories
  file:
    state=directory
    dest="{{item.value.prefix}}"
    owner="{{nginx_user}}"
    group="{{nginx_group}}"
    mode="{{item.value.mode|default('0750')}}"
  with_dict: nginx_cache_dirs


- name: Nginx server configs
  template:
    src=etc/nginx/conf.d/conf.j2
    dest="{{nginx_config_dir}}/{{item.key}}.conf"
    owner="root"
    group="{{nginx_group}}"
    mode="0644"
  with_dict: nginx_config
  no_log: true
  
- name: Nginx Workers
  lineinfile:
    state=present
    dest="{{nginx_prefix}}/nginx.conf"
    regexp="^([\t\s ]*worker_processes[\t\s ]*)[0-9]*;"
    line="worker_processes {{nginx_workers}};"
    backrefs=yes
  notify: nginx restart


- name: Nginx disable default virtualhost
  lineinfile:
    state:  absent
    dest:   "{{nginx_prefix}}/nginx.conf"
    regexp: "listen .* default_server;"
  notify: nginx restart
  

- name: Nginx OS family config (Debian)
  include: config/Debian.yml
  when: ansible_os_family == 'Debian'

- name: Nginx OS family config (Redhat)
  include: config/RedHat.yml
  when: ansible_os_family == 'RedHat'

# vi:ts=2:sw=2:et:ft=yaml
